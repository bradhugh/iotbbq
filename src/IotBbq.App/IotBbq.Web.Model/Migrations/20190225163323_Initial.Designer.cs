// <auto-generated />
using System;
using IotBbq.Web.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IotBbq.Web.Model.Migrations
{
    [DbContext(typeof(LoggingContext))]
    [Migration("20190225163323_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IotBbq.Web.Model.BbqEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EventDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("TurnInTime");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("IotBbq.Web.Model.BbqItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BbqEventId");

                    b.Property<DateTime?>("CookStartTime");

                    b.Property<string>("CurrentPhase");

                    b.Property<Guid>("EventId");

                    b.Property<string>("ItemType");

                    b.Property<string>("Name");

                    b.Property<float>("TargetTemperature");

                    b.Property<float>("Temperature");

                    b.Property<int>("ThermometerIndex");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("BbqEventId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("IotBbq.Web.Model.BbqItemLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BbqItemId");

                    b.Property<string>("CurrentPhase");

                    b.Property<Guid>("EventId");

                    b.Property<string>("ItemName");

                    b.Property<float>("Temperature");

                    b.Property<int>("Thermometer");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("BbqItemId");

                    b.ToTable("ItemLogs");
                });

            modelBuilder.Entity("IotBbq.Web.Model.SmokerLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("EventId");

                    b.Property<float>("SetTo");

                    b.Property<float>("Temperature");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("SmokerLog");
                });

            modelBuilder.Entity("IotBbq.Web.Model.BbqItem", b =>
                {
                    b.HasOne("IotBbq.Web.Model.BbqEvent", "BbqEvent")
                        .WithMany("Items")
                        .HasForeignKey("BbqEventId");
                });

            modelBuilder.Entity("IotBbq.Web.Model.BbqItemLog", b =>
                {
                    b.HasOne("IotBbq.Web.Model.BbqItem", "BbqItem")
                        .WithMany("ItemLogs")
                        .HasForeignKey("BbqItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IotBbq.Web.Model.SmokerLog", b =>
                {
                    b.HasOne("IotBbq.Web.Model.BbqEvent", "Event")
                        .WithMany("SmokerLogs")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
